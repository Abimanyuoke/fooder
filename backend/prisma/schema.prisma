generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  CASHIER
}

enum Category {
  FOOD
  DRINK
  SNACK
}

enum Payment {
  CASH
  QRIS
}

enum Status {
  NEW
  PAID
  DONE
}

model Account {
  id                String  @id @default(cuid())
  userId            Int     @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id              Int       @id @default(autoincrement())
  uuid            String    @unique @default("")
  name            String    @default("")
  email           String    @unique @default("")
  password        String    @default("")
  emailVerified   DateTime? @map("email_verified")
  profile_picture String    @default("")
  role            Role      @default(CASHIER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  accounts        Account[]
  orderDetail     Order[]

  @@map("users")
}

model Menu {
  id          Int         @id @default(autoincrement())
  uuid        String      @unique @default("")
  name        String      @default("")
  price       Int         @default(0)
  category    Category    @default(FOOD)
  picture     String      @default("")
  description  String     @db.Text
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderLists  OrderList[]
}

model Order {
  id             Int         @id @default(autoincrement())
  uuid           String      @unique @default("")
  customer       String      @default("")
  table_number   String      @default("")
  total_price    Int         @default(0)
  payment_method Payment     @default(CASH)
  status         Status      @default(NEW)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  orderLists     OrderList[]
  User           User?       @relation(fields: [userId], references: [id])
  userId         Int?
}

model OrderList {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default("")
  quantity  Int      @default(0)
  note      String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Menu      Menu?    @relation(fields: [menuId], references: [id])
  menuId    Int?
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?
}
